// <auto-generated />
using System;
using Infrastructure.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace Infrastructure.Migrations
{
    [DbContext(typeof(QuickBuyContext))]
    partial class QuickBuyContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("Core.Entities.Endereco", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityAlwaysColumn);

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasColumnType("character varying(60)")
                        .HasMaxLength(60);

                    b.Property<string>("CEP")
                        .HasColumnType("text");

                    b.Property<string>("Cidade")
                        .HasColumnType("character varying(60)")
                        .HasMaxLength(60);

                    b.Property<string>("Complemento")
                        .HasColumnType("character varying(30)")
                        .HasMaxLength(30);

                    b.Property<long>("EntitiesId")
                        .HasColumnType("bigint");

                    b.Property<string>("Estado")
                        .HasColumnType("character varying(60)")
                        .HasMaxLength(60);

                    b.Property<string>("Logradouro")
                        .IsRequired()
                        .HasColumnType("character varying(60)")
                        .HasMaxLength(60);

                    b.Property<string>("Numero")
                        .HasColumnType("character varying(30)")
                        .HasMaxLength(30);

                    b.HasKey("Id");

                    b.HasIndex("EntitiesId")
                        .IsUnique();

                    b.HasIndex("Id", "EntitiesId")
                        .IsUnique()
                        .HasName("pk_Endereco");

                    b.ToTable("Enderecos");
                });

            modelBuilder.Entity("Core.Entities.ItemPedido", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Observacoes")
                        .HasColumnType("character varying(520)")
                        .HasMaxLength(520);

                    b.Property<long>("PedidoId")
                        .HasColumnType("bigint");

                    b.Property<long>("ProdutoId")
                        .HasColumnType("bigint");

                    b.Property<decimal>("Quantidade")
                        .HasColumnType("decimal(15,4)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("char");

                    b.Property<decimal>("ValorAcrescimo")
                        .HasColumnType("decimal(15,2)");

                    b.Property<decimal>("ValorDesconto")
                        .HasColumnType("decimal(15,2)");

                    b.Property<decimal>("ValorSubTotal")
                        .HasColumnType("decimal(15,2)");

                    b.Property<decimal>("ValorTotal")
                        .HasColumnType("decimal(15,2)");

                    b.Property<decimal>("ValorUnitario")
                        .HasColumnType("decimal(15,2)");

                    b.HasKey("Id")
                        .HasName("pk_ItemPedido");

                    b.HasIndex("PedidoId");

                    b.HasIndex("ProdutoId")
                        .IsUnique();

                    b.ToTable("ItensPedido");
                });

            modelBuilder.Entity("Core.Entities.Pedido", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("DataPedido")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DataPrevisaoEntrega")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long>("EnderecoEntregaId")
                        .HasColumnType("bigint");

                    b.Property<string>("Observacao")
                        .HasColumnType("character varying(520)")
                        .HasMaxLength(520);

                    b.Property<long>("PessoaId")
                        .HasColumnType("bigint");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("char");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(15,2)");

                    b.HasKey("Id")
                        .HasName("pk_Pedido");

                    b.HasIndex("PessoaId");

                    b.ToTable("Pedidos");
                });

            modelBuilder.Entity("Core.Entities.Pessoa", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityAlwaysColumn);

                    b.Property<string>("Email")
                        .HasColumnType("character varying(256)")
                        .HasMaxLength(256);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("character varying(30)")
                        .HasMaxLength(30);

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("character varying(256)")
                        .HasMaxLength(256);

                    b.Property<string>("Sobrenome")
                        .HasColumnType("character varying(30)")
                        .HasMaxLength(30);

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique()
                        .HasName("pk_Pessoa");

                    b.ToTable("Pessoas");
                });

            modelBuilder.Entity("Core.Entities.Produto", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityAlwaysColumn);

                    b.Property<string>("CodigoInterno")
                        .IsRequired()
                        .HasColumnType("character varying(60)")
                        .HasMaxLength(60);

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("character varying(120)")
                        .HasMaxLength(120);

                    b.Property<string>("NomeArquivo")
                        .HasColumnType("character varying(120)")
                        .HasMaxLength(120);

                    b.Property<string>("UnidadeMedida")
                        .IsRequired()
                        .HasColumnType("character varying(6)")
                        .HasMaxLength(6);

                    b.Property<decimal>("ValoUnitario")
                        .HasColumnType("decimal(15,2)");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique()
                        .HasName("pk_Produto");

                    b.ToTable("Produtos");
                });

            modelBuilder.Entity("Core.Entities.Endereco", b =>
                {
                    b.HasOne("Core.Entities.Pedido", "Pedido")
                        .WithOne("Endereco")
                        .HasForeignKey("Core.Entities.Endereco", "EntitiesId")
                        .HasConstraintName("fk_Endereco_02")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Core.Entities.Pessoa", "Pessoa")
                        .WithOne("Endereco")
                        .HasForeignKey("Core.Entities.Endereco", "EntitiesId")
                        .HasConstraintName("fk_Endereco_01")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Core.Entities.ItemPedido", b =>
                {
                    b.HasOne("Core.Entities.Pedido", "Pedido")
                        .WithMany("ItensPedido")
                        .HasForeignKey("PedidoId")
                        .HasConstraintName("fk_ItemPedido_01")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Core.Entities.Produto", "Produto")
                        .WithOne("ItemPedido")
                        .HasForeignKey("Core.Entities.ItemPedido", "ProdutoId")
                        .HasConstraintName("fk_ItemPedido_02")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Core.Entities.Pedido", b =>
                {
                    b.HasOne("Core.Entities.Pessoa", "Pessoa")
                        .WithMany("Pedidos")
                        .HasForeignKey("PessoaId")
                        .HasConstraintName("fk_Pedido_01")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
